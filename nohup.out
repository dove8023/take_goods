server running
GET / /
{}
POST /api/login /api/login
{}
Executing (default): SELECT `id`, `name`, `phone`, `password`, `level`, `email`, `city`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`phone` = '15210593133' LIMIT 1;
{ dataValues: 
   { id: 1,
     name: 'mast',
     phone: '15210593133',
     password: 'abc123',
     level: '01',
     email: '123456789@qq.com',
     city: 'ä¸­å›½',
     createdAt: Wed Jun 22 2016 07:54:06 GMT+0800 (CST),
     updatedAt: Wed Jun 22 2016 07:54:06 GMT+0800 (CST) },
  _previousDataValues: 
   { id: 1,
     name: 'mast',
     phone: '15210593133',
     password: 'abc123',
     level: '01',
     email: '123456789@qq.com',
     city: 'ä¸­å›½',
     createdAt: Wed Jun 22 2016 07:54:06 GMT+0800 (CST),
     updatedAt: Wed Jun 22 2016 07:54:06 GMT+0800 (CST) },
  _changed: {},
  '$modelOptions': 
   { timestamps: true,
     instanceMethods: {},
     classMethods: {},
     validate: {},
     freezeTableName: false,
     underscored: false,
     underscoredAll: false,
     paranoid: false,
     rejectOnEmpty: false,
     whereCollection: { phone: '15210593133' },
     schema: null,
     schemaDelimiter: '',
     defaultScope: {},
     scopes: [],
     hooks: {},
     indexes: [],
     name: { plural: 'Users', singular: 'User' },
     omitNul: false,
     sequelize: 
      { options: [Object],
        config: [Object],
        dialect: [Object],
        models: [Object],
        modelManager: [Object],
        connectionManager: [Object],
        importCache: {},
        test: [Object],
        queryInterface: [Object] },
     uniqueKeys: { Users_phone_unique: [Object] },
     hasPrimaryKeys: true },
  '$options': 
   { isNewRecord: false,
     '$schema': null,
     '$schemaDelimiter': '',
     raw: true,
     attributes: 
      [ 'id',
        'name',
        'phone',
        'password',
        'level',
        'email',
        'city',
        'createdAt',
        'updatedAt' ] },
  hasPrimaryKeys: true,
  __eagerlyLoadedAssociations: [],
  isNewRecord: false }
GET / /
{ id: 1,
  name: 'mast',
  phone: '15210593133',
  session_id: '3Fq5cWqb1xOilGmG3-gJ7EikT8SuxUNR' }
GET /api/loginout /api/loginout
{ id: 1,
  name: 'mast',
  phone: '15210593133',
  session_id: '3Fq5cWqb1xOilGmG3-gJ7EikT8SuxUNR' }
GET / /
{}
POST /api/login /api/login
{}
Executing (default): SELECT `id`, `name`, `phone`, `password`, `level`, `email`, `city`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`phone` = '15210593133' LIMIT 1;
{ dataValues: 
   { id: 1,
     name: 'mast',
     phone: '15210593133',
     password: 'abc123',
     level: '01',
     email: '123456789@qq.com',
     city: 'ä¸­å›½',
     createdAt: Wed Jun 22 2016 07:54:06 GMT+0800 (CST),
     updatedAt: Wed Jun 22 2016 07:54:06 GMT+0800 (CST) },
  _previousDataValues: 
   { id: 1,
     name: 'mast',
     phone: '15210593133',
     password: 'abc123',
     level: '01',
     email: '123456789@qq.com',
     city: 'ä¸­å›½',
     createdAt: Wed Jun 22 2016 07:54:06 GMT+0800 (CST),
     updatedAt: Wed Jun 22 2016 07:54:06 GMT+0800 (CST) },
  _changed: {},
  '$modelOptions': 
   { timestamps: true,
     instanceMethods: {},
     classMethods: {},
     validate: {},
     freezeTableName: false,
     underscored: false,
     underscoredAll: false,
     paranoid: false,
     rejectOnEmpty: false,
     whereCollection: { phone: '15210593133' },
     schema: null,
     schemaDelimiter: '',
     defaultScope: {},
     scopes: [],
     hooks: {},
     indexes: [],
     name: { plural: 'Users', singular: 'User' },
     omitNul: false,
     sequelize: 
      { options: [Object],
        config: [Object],
        dialect: [Object],
        models: [Object],
        modelManager: [Object],
        connectionManager: [Object],
        importCache: {},
        test: [Object],
        queryInterface: [Object] },
     uniqueKeys: { Users_phone_unique: [Object] },
     hasPrimaryKeys: true },
  '$options': 
   { isNewRecord: false,
     '$schema': null,
     '$schemaDelimiter': '',
     raw: true,
     attributes: 
      [ 'id',
        'name',
        'phone',
        'password',
        'level',
        'email',
        'city',
        'createdAt',
        'updatedAt' ] },
  hasPrimaryKeys: true,
  __eagerlyLoadedAssociations: [],
  isNewRecord: false }
GET /order/ /order/
{ id: 1,
  name: 'mast',
  phone: '15210593133',
  session_id: '3Fq5cWqb1xOilGmG3-gJ7EikT8SuxUNR' }
POST /api/receive/list /api/receive/list
{ id: 1,
  name: 'mast',
  phone: '15210593133',
  session_id: '3Fq5cWqb1xOilGmG3-gJ7EikT8SuxUNR' }
Deprecation warning: moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.
Arguments: [object Object]
Error
    at Function.createFromInputFallback (/root/node/take_goods/node_modules/sequelize/node_modules/moment/moment.js:271:105)
    at configFromString (/root/node/take_goods/node_modules/sequelize/node_modules/moment/moment.js:1169:32)
    at configFromInput (/root/node/take_goods/node_modules/sequelize/node_modules/moment/moment.js:1675:13)
    at prepareConfig (/root/node/take_goods/node_modules/sequelize/node_modules/moment/moment.js:1658:13)
    at createFromConfig (/root/node/take_goods/node_modules/sequelize/node_modules/moment/moment.js:1625:44)
    at createLocalOrUTC (/root/node/take_goods/node_modules/sequelize/node_modules/moment/moment.js:1707:16)
    at local__createLocal (/root/node/take_goods/node_modules/sequelize/node_modules/moment/moment.js:1711:16)
    at utils_hooks__hooks (/root/node/take_goods/node_modules/sequelize/node_modules/moment/moment.js:16:29)
    at DATE.$applyTimezone (/root/node/take_goods/node_modules/sequelize/lib/data-types.js:473:14)
    at DATE.$stringify (/root/node/take_goods/node_modules/sequelize/lib/dialects/mysql/data-types.js:34:37)
    at ABSTRACT.stringify (/root/node/take_goods/node_modules/sequelize/lib/data-types.js:77:17)
    at Object.QueryGenerator.escape (/root/node/take_goods/node_modules/sequelize/lib/dialects/abstract/query-generator.js:966:32)
    at Object.QueryGenerator.whereItemQuery (/root/node/take_goods/node_modules/sequelize/lib/dialects/abstract/query-generator.js:2260:22)
    at /root/node/take_goods/node_modules/sequelize/lib/dialects/abstract/query-generator.js:2155:28
    at /root/node/take_goods/node_modules/sequelize/node_modules/lodash/lodash.js:4389:15
    at baseForOwn (/root/node/take_goods/node_modules/sequelize/node_modules/lodash/lodash.js:2652:24)
Executing (default): SELECT count(*) AS `count` FROM `Orders` AS `Order` WHERE `Order`.`u_id` = 1 AND `Order`.`state` = 1 AND (`Order`.`createdAt` > '2016-06-01 00:00:00' AND `Order`.`createdAt` < '2016-06-22 23:59:59');
Executing (default): SELECT `id`, `u_id`, `operator`, `seller`, `total`, `comment`, `state`, `createdAt`, `updatedAt` FROM `Orders` AS `Order` WHERE `Order`.`u_id` = 1 AND `Order`.`state` = 1 AND (`Order`.`createdAt` > '2016-06-01 00:00:00' AND `Order`.`createdAt` < '2016-06-22 23:59:59') ORDER BY `Order`.`id` DESC LIMIT 0, 50;
GET /api/receive/select/1 /api/receive/select/1
{ id: 1,
  name: 'mast',
  phone: '15210593133',
  session_id: '3Fq5cWqb1xOilGmG3-gJ7EikT8SuxUNR' }
Executing (default): SELECT `id`, `u_id`, `operator`, `seller`, `total`, `comment`, `state`, `createdAt`, `updatedAt` FROM `Orders` AS `Order` WHERE `Order`.`u_id` = 1 AND `Order`.`id` = '1' AND `Order`.`state` = 1;
Executing (default): SELECT count(*) AS `count` FROM `Goods` AS `Goods` WHERE `Goods`.`o_id` = '1' AND `Goods`.`state` = 1;
Executing (default): SELECT `id`, `u_id`, `o_id`, `operator`, `seller`, `type_name`, `type_id`, `price`, `weight`, `one_total`, `state`, `createdAt`, `updatedAt` FROM `Goods` AS `Goods` WHERE `Goods`.`o_id` = '1' AND `Goods`.`state` = 1 ORDER BY `Goods`.`id` ASC LIMIT 0, 1000;
GET http://fr.cyberpods.net/ /
{}
GET /order/ /order/
{ id: 1,
  name: 'mast',
  phone: '15210593133',
  session_id: '3Fq5cWqb1xOilGmG3-gJ7EikT8SuxUNR' }
POST /api/receive/list /api/receive/list
{ id: 1,
  name: 'mast',
  phone: '15210593133',
  session_id: '3Fq5cWqb1xOilGmG3-gJ7EikT8SuxUNR' }
Executing (default): SELECT count(*) AS `count` FROM `Orders` AS `Order` WHERE `Order`.`u_id` = 1 AND `Order`.`state` = 1 AND (`Order`.`createdAt` > '2016-06-01 00:00:00' AND `Order`.`createdAt` < '2016-06-22 23:59:59');
Executing (default): SELECT `id`, `u_id`, `operator`, `seller`, `total`, `comment`, `state`, `createdAt`, `updatedAt` FROM `Orders` AS `Order` WHERE `Order`.`u_id` = 1 AND `Order`.`state` = 1 AND (`Order`.`createdAt` > '2016-06-01 00:00:00' AND `Order`.`createdAt` < '2016-06-22 23:59:59') ORDER BY `Order`.`id` DESC LIMIT 0, 50;
GET / /
{ id: 1,
  name: 'mast',
  phone: '15210593133',
  session_id: '3Fq5cWqb1xOilGmG3-gJ7EikT8SuxUNR' }
GET /receive /receive
{ id: 1,
  name: 'mast',
  phone: '15210593133',
  session_id: '3Fq5cWqb1xOilGmG3-gJ7EikT8SuxUNR' }
GET /api/type/list /api/type/list
{ id: 1,
  name: 'mast',
  phone: '15210593133',
  session_id: '3Fq5cWqb1xOilGmG3-gJ7EikT8SuxUNR' }
Executing (default): SELECT count(*) AS `count` FROM `Types` AS `Type` WHERE `Type`.`u_id` = 1 AND `Type`.`state` = 1;
Executing (default): SELECT `id`, `u_id`, `name`, `price`, `state`, `createdAt`, `updatedAt` FROM `Types` AS `Type` WHERE `Type`.`u_id` = 1 AND `Type`.`state` = 1 ORDER BY `Type`.`id` DESC LIMIT 0, 20;
GET / /
{ id: 1,
  name: 'mast',
  phone: '15210593133',
  session_id: '3Fq5cWqb1xOilGmG3-gJ7EikT8SuxUNR' }
GET /order/ /order/
{ id: 1,
  name: 'mast',
  phone: '15210593133',
  session_id: '3Fq5cWqb1xOilGmG3-gJ7EikT8SuxUNR' }
POST /api/receive/list /api/receive/list
{ id: 1,
  name: 'mast',
  phone: '15210593133',
  session_id: '3Fq5cWqb1xOilGmG3-gJ7EikT8SuxUNR' }
Executing (default): SELECT count(*) AS `count` FROM `Orders` AS `Order` WHERE `Order`.`u_id` = 1 AND `Order`.`state` = 1 AND (`Order`.`createdAt` > '2016-06-01 00:00:00' AND `Order`.`createdAt` < '2016-06-22 23:59:59');
Executing (default): SELECT `id`, `u_id`, `operator`, `seller`, `total`, `comment`, `state`, `createdAt`, `updatedAt` FROM `Orders` AS `Order` WHERE `Order`.`u_id` = 1 AND `Order`.`state` = 1 AND (`Order`.`createdAt` > '2016-06-01 00:00:00' AND `Order`.`createdAt` < '2016-06-22 23:59:59') ORDER BY `Order`.`id` DESC LIMIT 0, 50;
GET / /
{ id: 1,
  name: 'mast',
  phone: '15210593133',
  session_id: '3Fq5cWqb1xOilGmG3-gJ7EikT8SuxUNR' }
GET /type/ /type/
{ id: 1,
  name: 'mast',
  phone: '15210593133',
  session_id: '3Fq5cWqb1xOilGmG3-gJ7EikT8SuxUNR' }
GET /api/type/list /api/type/list
{ id: 1,
  name: 'mast',
  phone: '15210593133',
  session_id: '3Fq5cWqb1xOilGmG3-gJ7EikT8SuxUNR' }
Executing (default): SELECT count(*) AS `count` FROM `Types` AS `Type` WHERE `Type`.`u_id` = 1 AND `Type`.`state` = 1;
Executing (default): SELECT `id`, `u_id`, `name`, `price`, `state`, `createdAt`, `updatedAt` FROM `Types` AS `Type` WHERE `Type`.`u_id` = 1 AND `Type`.`state` = 1 ORDER BY `Type`.`id` DESC LIMIT 0, 20;
GET / /
{ id: 1,
  name: 'mast',
  phone: '15210593133',
  session_id: '3Fq5cWqb1xOilGmG3-gJ7EikT8SuxUNR' }
GET /api/loginout /api/loginout
{ id: 1,
  name: 'mast',
  phone: '15210593133',
  session_id: '3Fq5cWqb1xOilGmG3-gJ7EikT8SuxUNR' }
GET / /
{}
GET / /
{}
